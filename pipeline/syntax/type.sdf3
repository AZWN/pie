module type

imports
  
  lex/literal

context-free syntax

  BaseType.BoolTy = <bool>
  BaseType.IntTy  = <int>
  BaseType.StrTy  = <string>
  BaseType.DataTy = <<ID>> {avoid}
  
  TypeMod.NullableTy = <<BaseType>?>
  
  Type = BaseType
  Type = TypeMod

context-free syntax

  Type.FuncTy = [[{Type ", "}*] -> [{Type ", "}*]]
  Type.NullTy = <^>
